package com.notification.service.configuration;

import org.springframework.kafka.listener.SeekToCurrentErrorHandler;
import org.springframework.kafka.listener.DeadLetterPublishingRecoverer;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.util.backoff.FixedBackOff;

// Kafka Listener Factory
@Bean
public ConcurrentKafkaListenerContainerFactory<String, OrderPlacedEvent> kafkaListenerContainerFactory(
        ConsumerFactory<String, OrderPlacedEvent> consumerFactory,
        KafkaTemplate<Object, Object> kafkaTemplate) {

    ConcurrentKafkaListenerContainerFactory<String, OrderPlacedEvent> factory =
            new ConcurrentKafkaListenerContainerFactory<>();
    factory.setConsumerFactory(consumerFactory);
    factory.setConcurrency(3);

    // Retry 3 times, 2 sec interval, then DLT
    FixedBackOff fixedBackOff = new FixedBackOff(2000L, 3);
    DeadLetterPublishingRecoverer recoverer = new DeadLetterPublishingRecoverer(kafkaTemplate);
    SeekToCurrentErrorHandler errorHandler = new SeekToCurrentErrorHandler(recoverer, fixedBackOff);

    factory.setErrorHandler(errorHandler);

    return factory;
}

