# -----------------------------
# Service Info
# -----------------------------
spring.application.name=notification-service
server.port=8087

# -----------------------------
# Eureka Client Configuration
# -----------------------------
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# -----------------------------
# Actuator Endpoints
# -----------------------------
management.endpoints.web.exposure.include=*
management.endpoint.info.enabled=true
management.endpoint.shutdown.enabled=true

# -----------------------------
# Kafka Configuration
# -----------------------------
spring.kafka.bootstrap-servers=localhost:9092

# Consumer configuration
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.events.OrderPlacedEvent

# Listener configuration
spring.kafka.listener.ack-mode=record

# Producer configuration (optional, if this service also produces)
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Admin (auto-create topics)
spring.kafka.admin.auto-create=true

# -----------------------------
# Custom Application Properties
# -----------------------------
app.kafka.topic.orderPlaced=order.placed.v1
app.kafka.topic.dlt=order.placed.v1.dlt
